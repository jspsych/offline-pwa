import { readFile, writeFile } from "fs/promises";
import { dirname, join } from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

async function generateVersionFile() {
  // Read offline-storage package.json
  const offlineStoragePkgPath = join(__dirname, "../../offline-storage/package.json");
  const offlineStoragePkg = JSON.parse(await readFile(offlineStoragePkgPath, "utf-8"));
  const version = offlineStoragePkg.version;

  // Generate TypeScript file
  const content = `// This file is auto-generated by scripts/generate-version.js
export const OFFLINE_STORAGE_VERSION = "${version}";
`;

  const outputPath = join(__dirname, "../src/version.ts");
  await writeFile(outputPath, content, "utf-8");

  console.log(`Generated version.ts with offline-storage version: ${version}`);
}

generateVersionFile().catch((err) => {
  console.error("Failed to generate version file:", err);
  process.exit(1);
});
